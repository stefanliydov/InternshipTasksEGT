package com.egtinteractive.data_structures.list;

import org.testng.Assert;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;

import com.egtinteractive.data_structures.generator.NumberGenerator;

public class GetTests {

    private static final int ZERO = 0;
    
    @DataProvider(name = "getClass")
    public Object[][] getData() {
	return new Object[][] { { new ArrayList<>() }, { new LinkedList<>() } };
    }

    @Test(dataProvider = "getClass")
    public void getShouldReturnCorrectElement(List<Integer> list) {
	final int num1 = NumberGenerator.generate(10000);
	final int num2 = NumberGenerator.generate(10000);
	final int num3 = NumberGenerator.generate(10000);

	list.add(num1);
	list.add(num2);
	list.add(num3);

	final int result = list.get(1);
	Assert.assertEquals(result, num2);
    }

    @Test(dataProvider = "getClass")
    public void getShouldWorkCorrectlyWithAlotOfElements(List<Integer> list) {
	final int size = NumberGenerator.generate(70, 100);
	final Integer[] arr = new Integer[size];

	for (int i = ZERO; i < size; i++) {
	    final int num = NumberGenerator.generate(10000);
	    list.add(num);
	    arr[i] = num;
	}

	for (int i = ZERO; i < size; i++) {
	    Assert.assertEquals(arr[i], list.get(i));
	}

    }

}
