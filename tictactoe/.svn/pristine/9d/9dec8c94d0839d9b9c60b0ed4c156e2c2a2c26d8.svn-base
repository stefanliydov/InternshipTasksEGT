import java.lang.reflect.Field;
import java.util.Scanner;

import egt.interactive.tic_tac_toe.arcade.BoardArcadeGame;
import egt.interactive.tic_tac_toe.game.GameOutcome;
import egt.interactive.tic_tac_toe.game.States;
import egt.interactive.tic_tac_toe.game.TicTacToe;
import egt.interactive.tic_tac_toe.game_utils.BoardGameUtils;

public class Launcher {

    public static void main(String[] args) {
	final BoardArcadeGame game = new TicTacToe.Builder().build();
	final Scanner scanner = new Scanner(System.in);
	System.out.println("Please insert 10 coins");
	while (getGameState(game) == States.STAND_BY) {
	    game.putCoins(Integer.valueOf(scanner.nextLine()));
	}

	while (getGameOutcome(game) == null) {
	    game.playMove(Integer.valueOf(scanner.nextLine()));
	}
	if (getGameOutcome(game) == GameOutcome.PLAYER_WINS) {
	    game.giveName(scanner.nextLine());
	}
	game.endGame();
	scanner.close();
    }

    private static States getGameState(final BoardArcadeGame game) {
	try {
	    final Field gameUtilField = game.getClass().getDeclaredField("gameUtils");
	    gameUtilField.setAccessible(true);
	    BoardGameUtils gameUtil = (BoardGameUtils) gameUtilField.get(game);
	    return gameUtil.getState();
	} catch (NoSuchFieldException | SecurityException | IllegalArgumentException | IllegalAccessException e) {
	    throw new RuntimeException(e);
	}

    }

    private static GameOutcome getGameOutcome(final BoardArcadeGame game) {
	try {
	    final Field gameUtilField = game.getClass().getDeclaredField("gameUtils");
	    gameUtilField.setAccessible(true);
	    BoardGameUtils gameUtil = (BoardGameUtils) gameUtilField.get(game);
	    return gameUtil.getOutcome();
	} catch (NoSuchFieldException | SecurityException | IllegalArgumentException | IllegalAccessException e) {
	    throw new RuntimeException(e);
	}

    }
}
